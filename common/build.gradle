apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def config = rootProject.ext.android // 配置

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        consumerProguardFiles 'proguard-rules.pro'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    api 'com.android.support.test:runner:1.0.2'
    api 'com.android.support.test.espresso:espresso-core:3.0.2'



    // Retrofit(https://github.com/square/retrofit)
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$converterGsonVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$adapterRxjava2Version"

    // Okhttp3(https://github.com/square/okhttp)
    api "com.squareup.okhttp3:okhttp:$okhttp3Version"
    api "com.squareup.okhttp3:logging-interceptor:$logginginterceptor"

    // Rxjava2(https://github.com/ReactiveX/RxJava)
    api "io.reactivex.rxjava2:rxjava:$rxjavaVersion"

    // RxAndroid(https://github.com/ReactiveX/RxAndroid)
    api "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //Logger
    api "com.orhanobut:logger:$loggerVersion"
}
repositories {
    mavenCentral()
}
